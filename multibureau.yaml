openapi: 3.0.1
info:
  title: hub-multibureau
  description: 'Aplicacion Spring Boot de hubmbu: multibureau'
  version: 1.0.36-rc5
servers:
  - url: https://hubmbu.pru.bsch/api/hub-multibureau
    description: Generated server url
security:
  - BearerAuth: []
tags:
  - name: HubMultibureauController
    description: Controller to get information about external bureaus.
paths:
  /api/v1/risk-data-information:
    post:
      tags:
        - HubMultibureauController
      summary: Get information from external bureaus
      description: Endpoint that gets information from external bureaus.
      operationId: getRiskDataInformation
      parameters:
        - in: header
          $ref: '#/components/parameters/Contact-Point'
        - in: header
          $ref: '#/components/parameters/Session-Id'
        - in: header
          $ref: '#/components/parameters/User-Agent'
        - in: header
          $ref: '#/components/parameters/app-init'
        - in: header
          $ref: '#/components/parameters/X-B3-TraceId'
        - in: header
          $ref: '#/components/parameters/X-B3-SpanId'
        - in: header
          $ref: '#/components/parameters/X-ClientId'
        - in: header
          $ref: '#/components/parameters/X-Santander-Channel'
        - in: header
          $ref: '#/components/parameters/X-Control-Operativo'
        - in: header
          $ref: '#/components/parameters/organization'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HubMultibureauRequestDTO'
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HubMultibureauResponseDTO'
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModelDarwin'
        '401':
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModelDarwin'
        '500':
          description: Technical Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModelDarwin'
  /api/v1/risk-data-information/status:
    post:
      tags:
        - HubMultibureauController
      summary: Gets the participants status for bureau MO.
      description: Endpoint to check if the information from the selected participants are valid or not.
      operationId: getMultipleParticipantMOStatus
      parameters:
        - in: header
          $ref: '#/components/parameters/Contact-Point'
        - in: header
          $ref: '#/components/parameters/Session-Id'
        - in: header
          $ref: '#/components/parameters/User-Agent'
        - in: header
          $ref: '#/components/parameters/app-init'
        - in: header
          $ref: '#/components/parameters/X-B3-TraceId'
        - in: header
          $ref: '#/components/parameters/X-B3-SpanId'
        - in: header
          $ref: '#/components/parameters/X-ClientId'
        - in: header
          $ref: '#/components/parameters/X-Santander-Channel'
        - in: header
          $ref: '#/components/parameters/X-Control-Operativo'
        - in: header
          $ref: '#/components/parameters/organization'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HubMbultibureauMultipleStatusRequestDTO'
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: string
              example:
                F12345: true
                J987: false
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModelGateway'
  /api/v1/risk-data-information/orders:
    post:
      tags:
        - HubMultibureauController
      summary: Launch of a preloading order for risk information data.
      description: Endpoint that launches of a preloading order for risk information data.
      operationId: riskDataRequest
      parameters:
        - in: header
          $ref: '#/components/parameters/Contact-Point'
        - in: header
          $ref: '#/components/parameters/Session-Id'
        - in: header
          $ref: '#/components/parameters/User-Agent'
        - in: header
          $ref: '#/components/parameters/app-init'
        - in: header
          $ref: '#/components/parameters/X-B3-TraceId'
        - in: header
          $ref: '#/components/parameters/X-B3-SpanId'
        - in: header
          $ref: '#/components/parameters/X-ClientId'
        - in: header
          $ref: '#/components/parameters/X-Santander-Channel'
        - in: header
          $ref: '#/components/parameters/X-Control-Operativo'
        - in: header
          $ref: '#/components/parameters/organization'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HubMultibureauOrdersRequestDTO'
        required: true
      responses:
        '201':
          description: Created
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModelGateway'
  /api/v1/risk-data-information/confirma:
    post:
      tags:
        - HubMultibureauController
      summary: Get alerts from confirma service
      description: Endpoint that gets alerts from confirma service.
      operationId: getConfirmaAlerts
      parameters:
        - in: header
          $ref: '#/components/parameters/Contact-Point'
        - in: header
          $ref: '#/components/parameters/Session-Id'
        - in: header
          $ref: '#/components/parameters/User-Agent'
        - in: header
          $ref: '#/components/parameters/app-init'
        - in: header
          $ref: '#/components/parameters/X-B3-TraceId'
        - in: header
          $ref: '#/components/parameters/X-B3-SpanId'
        - in: header
          $ref: '#/components/parameters/X-ClientId'
        - in: header
          $ref: '#/components/parameters/X-Santander-Channel'
        - in: header
          $ref: '#/components/parameters/X-Control-Operativo'
        - in: header
          $ref: '#/components/parameters/organization'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HubMultibureauConfirmaRequestDTO'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HubMultibureauConfirmaResponseDTO'
        '400':
          description: MatrixFlow Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModelDarwin'
        '401':
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModelDarwin'
        '500':
          description: Technical Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModelDarwin'
  /api/v1/risk-data-information/participant/{participant}/status:
    get:
      tags:
        - HubMultibureauController
      summary: Gets the participants status for bureau MO.
      description: Endpoint to check if the information from the selected participants is valid or not.
      operationId: getParticipantMOStatus
      parameters:
        - name: participant
          in: path
          description: The requested participant.
          required: true
          schema:
            type: string
            description: The requested participant.
            example: F1231654
          example: F1231654
        - in: header
          $ref: '#/components/parameters/Contact-Point'
        - in: header
          $ref: '#/components/parameters/Session-Id'
        - in: header
          $ref: '#/components/parameters/User-Agent'
        - in: header
          $ref: '#/components/parameters/app-init'
        - in: header
          $ref: '#/components/parameters/X-B3-TraceId'
        - in: header
          $ref: '#/components/parameters/X-B3-SpanId'
        - in: header
          $ref: '#/components/parameters/X-ClientId'
        - in: header
          $ref: '#/components/parameters/X-Santander-Channel'
        - in: header
          $ref: '#/components/parameters/X-Control-Operativo'
        - in: header
          $ref: '#/components/parameters/organization'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HubMbultibureauStatusResponseDTO'
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModelGateway'
components:
  schemas:
    ErrorModelGateway:
      type: object
      properties:
        httpCode:
          type: integer
          description: Http error code
          format: int32
          example: 404
        httpMessage:
          type: string
          description: description of the error
          example: Not Found
        moreInformation:
          type: string
          description: description of the error
          example: Not Found in /v1/applications//gateways
      description: Darwin Gateway error
    AddressDTO:
      type: object
      properties:
        restOfAddress:
          type: string
          description: The rest of the address.
        country:
          type: string
          description: The country of the address.
          example: ES
        streetType:
          type: string
          description: The street type.
          example: CL
        streetName:
          type: string
          description: The street name.
          example: Goya
        postalCode:
          type: string
          description: The postal code.
          example: '28001'
        houseNumber:
          type: string
          description: The house number.
          example: '1'
        locality:
          type: string
          description: The locality of the address.
          example: Madrid
        provinceName:
          type: string
          description: The province of the address.
          example: Madrid
      description: The address information from the participant.
    HubMultibureauRequestDTO:
      type: object
      properties:
        matrix:
          $ref: '#/components/schemas/MatrixDTO'
        participants:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ParticipantDTO'
          description: The participants that will follow the matrix/list of bureaus to get the data.
          example:
            T1:
              personType: F
              personCode: 101723570
            AV1:
              personType: F
              personCode: 1
        bureauCodes:
          type: array
          description: The list of BureauCodes (If the matrix is informed the list will be ignored).
          items:
            type: string
            description: The code of the bureaus. Currently it can be RS(RiskScoreAddress) and/or CD(CommercialDelphi)
            example: RS
    MatrixDTO:
      type: object
      properties:
        spid:
          type: number
          description: The SPID.
          example: 3
        callType:
          type: string
          description: The call type.
          example: F2
        circuit:
          type: string
          description: The circuit.
          example: PE
        callingProcess:
          type: string
          description: The calling process.
      description: The matrix to determinate which flow of bureaus will take each participant.
    ParticipantDTO:
      type: object
      properties:
        personType:
          type: string
          description: The person type.
          enum:
            - J
            - F
        personCode:
          type: number
          description: The person code.
          example: 101723570
        documentType:
          type: string
          description: The document type.
          example: NIF
        documentCode:
          type: string
          description: The document code.
          example: 12345678A
        seniorityLabour:
          type: integer
          description: The seniority labour of the participant.
          format: int32
          example: 0
        ageActivity:
          type: integer
          description: The age activity of the participant.
          format: int32
          example: 0
        address:
          $ref: '#/components/schemas/AddressDTO'
        dateOfBirth:
          type: string
          description: The date of birth from the participant.
          format: date
          example: '1980-10-05'
        cnae:
          type: string
          description: The cnae of the participant.
          example: '0111'
        name:
          type: string
          description: The name from the participant.
          example: Juan
        lastName1:
          type: string
          description: The first last name from the participant.
          example: ApellidoPrueba1
        lastName2:
          type: string
          description: The second last name from the participant.
          example: ApellidoPrueba2
        nationality:
          type: string
          description: The nationality from the participant.
          example: ES
        telephone:
          type: string
          description: The telephone from the participant.
          example: '666666666'
        email:
          type: string
          description: The email from the participant.
          example: example@email.com
      description: The participants that will follow the matrix/list of bureaus to get the data.
      example:
        T1:
          personType: F
          personCode: 101723570
        AV1:
          personType: F
          personCode: 1
    ErrorModelDarwin:
      type: object
      properties:
        appName:
          type: string
        timeStamp:
          type: integer
          format: int64
        errorName:
          type: string
        status:
          type: integer
          format: int32
        internalCode:
          type: integer
          format: int32
        shortMessage:
          type: string
        detailedMessage:
          type: string
        mapExtendedMessage:
          type: object
          additionalProperties:
            type: object
    BureauDTO:
      type: object
      properties:
        bureauCode:
          type: string
          description: The code of the bureaus. Currently it can be RS(RiskScoreAddress) and/or CD(CommercialDelphi)
        bureauData:
          type: object
          properties:
            empty:
              type: boolean
          additionalProperties:
            type: object
            description: The data from the response of the BureauCode.
          description: The data from the response of the BureauCode.
        error:
          $ref: '#/components/schemas/ErrorDTO'
      description: The code of the bureaus. Currently it can be RS(RiskScoreAddress) and/or CD(CommercialDelphi)
      example: RS
    ErrorDTO:
      type: object
      properties:
        errorCode:
          type: string
          description: The possible code that the Bureau can answer.
        errorDescription:
          type: string
          description: The possible description that the Bureau can answer.
      description: The possible error that the Bureau can answer.
    HubMultibureauResponseDTO:
      type: object
      properties:
        appName:
          type: string
          description: The App name.
          example: hub-multibureau
        appKey:
          type: string
          description: The App key.
          example: hubmbu
        timeStamp:
          type: string
          description: The timestamp that shows when the operation was done.
          format: date-time
        participantsInformation:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ParticipantBureausInformationDTO'
          description: Contains the information from the participants.
          example:
            T1:
              personType: J
              personCode: 101723570
              bureausData:
                - bureauCode: CD
                  bureauData:
                    commercialDelphiReport4A:
                      badexcug: 'true'
                      judicialIncidents: 'false'
                      error:
                        code: '000'
                        description: Procesamiento correcto
                        type: '0'
                      assignmentMethod:
                        code: '01'
                        description: Asignación por CD.
                      globalIndicator:
                        delphiScore: '-999'
                        delphiNote: Z
                        decileDelphi: '-99'
                        globalPercentile: '-999'
                        sectorialPercentile: '-99'
                        defaultProbability: '-9999.99'
                        probabilityDefaultNote: '-9999.99'
                        defaultProbabilityDeciles: '-9999.99'
                        probabilityDefaultPercentiles: null
                        exclusionRules:
                          ttypeCode:
                            - code: E004
                              description: 'Exclusión: Empresa no evaluable (Véase casuística en documentación).'
                        evaluationRules:
                          ttypeCode:
                            - code: ''
                              description: ''
                      companySize:
                        code: '00'
                        description: Sin clasificar
                    error: null
                  error: null
    ParticipantBureausInformationDTO:
      type: object
      properties:
        personType:
          type: string
          description: The person type.
          example: J
        personCode:
          type: number
          description: The person code.
          example: 101723570
        documentType:
          type: string
        documentCode:
          type: string
        bureausData:
          type: array
          description: The list of BureauCodes (If the matrix is informed the list will be ignored).
          items:
            $ref: '#/components/schemas/BureauDTO'
      description: Contains the information from the participants.
      example:
        T1:
          personType: J
          personCode: 101723570
          bureausData:
            - bureauCode: CD
              bureauData:
                commercialDelphiReport4A:
                  badexcug: 'true'
                  judicialIncidents: 'false'
                  error:
                    code: '000'
                    description: Procesamiento correcto
                    type: '0'
                  assignmentMethod:
                    code: '01'
                    description: Asignación por CD.
                  globalIndicator:
                    delphiScore: '-999'
                    delphiNote: Z
                    decileDelphi: '-99'
                    globalPercentile: '-999'
                    sectorialPercentile: '-99'
                    defaultProbability: '-9999.99'
                    probabilityDefaultNote: '-9999.99'
                    defaultProbabilityDeciles: '-9999.99'
                    probabilityDefaultPercentiles: null
                    exclusionRules:
                      ttypeCode:
                        - code: E004
                          description: 'Exclusión: Empresa no evaluable (Véase casuística en documentación).'
                    evaluationRules:
                      ttypeCode:
                        - code: ''
                          description: ''
                  companySize:
                    code: '00'
                    description: Sin clasificar
                error: null
              error: null
    HubMbultibureauMultipleStatusRequestDTO:
      type: object
      properties:
        participants:
          type: array
          description: The list of the requested participants.
          items:
            type: string
            description: The requested participant.
            example: F1231654
    HubMultibureauOrdersRequestDTO:
      type: object
      properties:
        participants:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ParticipantDTO'
          description: The participants that will follow the matrix/list of bureaus to get the data.
          example:
            T1:
              personType: F
              personCode: 101723570
            AV1:
              personType: F
              personCode: 1
        bureauCodes:
          type: array
          description: The list of BureauCodes (If the matrix is informed the list will be ignored).
          items:
            type: string
            description: The code of the bureaus. Currently it can be RS(RiskScoreAddress) and/or CD(CommercialDelphi)
            example: RS
        proposal:
          type: string
          description: The proposal code for Confirma Bureau.
          example: '1111222233334444'
    ApplicationDTO:
      type: object
      properties:
        amount:
          type: number
          description: The amount of the request.
          example: 132.32
        product:
          type: string
          description: The product of the request.
          example: '100'
        entryDate:
          type: string
          description: The entry date of the request.
          format: date
          example: '2022-05-06'
        id:
          type: string
          description: The id of the request.
          example: idsolicitud
    HubMultibureauConfirmaRequestDTO:
      type: object
      properties:
        matrix:
          $ref: '#/components/schemas/MatrixDTO'
        participants:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ParticipantDTO'
          description: The participants that will follow the matrix/list of bureaus to get the data.
          example:
            T1:
              personType: F
              personCode: 101723570
            AV1:
              personType: F
              personCode: 1
        request:
          $ref: '#/components/schemas/ApplicationDTO'
        proposal:
          type: string
          description: The proposal code for Confirma Bureau.
          example: '1111222233334444'
    HubMultibureauConfirmaResponseDTO:
      type: object
      properties:
        guid:
          type: string
        requestNumber:
          type: string
        requestDate:
          type: string
        processingDate:
          type: string
        decisionResult:
          type: string
        rulesFired:
          type: array
          items:
            type: string
        errorCode:
          type: string
        errorMessage:
          type: string
    HubMbultibureauStatusResponseDTO:
      type: object
      properties:
        status:
          type: boolean
          description: The status for the checked participant in bureau MO, true if information is active, false if not active.
          example: true
  parameters:
    Contact-Point:
      name: Contact-Point
      in: header
      description: |-
        Identify the caller's point of contact.
        It originates from the presentation component and must be propagated through all communications.
      required: false
      schema:
        type: string
      example: SPA
    Session-Id:
      name: Session-Id
      in: header
      description: |-
        Identifier of the user's session at the application.
        It originates from the presentation component with which the user interacts and must be propagated in all communications.
      required: false
      schema:
        type: string
      example: 1603713705-aa47-cd93-0826-075c549742a4
    User-Agent:
      name: User-Agent
      in: header
      description: |-
        Identify the technical characteristics of the device who make a network request and with which the user interacts.
        It originates from the client that calls an API, either a presentation component or a microservice.
      required: false
      schema:
        type: string
      example: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36
    app-init:
      name: app-init
      in: header
      description: |-
        Id (appKey) of the application that initiates a request and is propagated among all applications.
        It originates from the presentation component and must be propagated through all communications.
      required: false
      schema:
        type: string
      example: regapi
    X-B3-TraceId:
      name: X-B3-TraceId
      in: header
      description: |-
        Unique correlate identifier of a request, indicates the overall ID of the trace.
        It originates from the gateway and must be propagated through all communications.
      required: false
      schema:
        type: string
      example: 163ef67500d8b813
    X-B3-SpanId:
      name: X-B3-SpanId
      in: header
      description: |-
        Identifier of the traces in a component in the same request.
        Generated in all backend components.
      required: false
      schema:
        type: string
      example: f5cec96a6d76ce01
    X-ClientId:
      name: X-ClientId
      in: header
      description: "\t\nIdentify the calling application.\n\nIt originates from the client that calls an API, either a presentation component or a microservice."
      required: false
      schema:
        type: string
      example: regapi
    X-Santander-Channel:
      name: X-Santander-Channel
      in: header
      description: "\t\nIdentify the channel through which the user interacts.\n\nIt originates from the web gateway that creates it from the user's credential, it must be propagated in all communications."
      required: false
      schema:
        type: string
      example: INT
    X-Control-Operativo:
      name: X-Control-Operativo
      in: header
      description: |-
        Token with the validation data of the Operational Control.
        It originates from a microservice through the Operational Control security service, it must be propagated through all communications.
      required: false
      schema:
        type: string
      example: eyJraWQiOiJTVFNTYW5CY2VDZXJ0VjEiLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJDb250cm9sT3BlcmF0aXZvREVWIiwicmVzdWx0YWRvIjoiTyIsImlzcyI6IkNvbnRyb2xPcGVyYXRpdm9ERVYiLCJmZWNoYUVqZWN1Y2lvbiI6IjIwMjAtMTAtMjYgMTM6MTI6NTguMTg3IiwiY2FuYWwiOiJPRkkiLCJleHAiOjE2MDM3MTc5NzgsInRpcG9WYWxpZGFjaW9uIjoiQ0FOQUwifQ.FcjnZlHlGwCKI47BA1U6HtOYqMDfrsoQje-pbusJx1DQu2vJBbNNoLHBeyZYsc9WW1fmXKHVKwBvY5X9c_iq__MxguSkov6y_UN4uwwd1YNctYy0VppebYcnYiAm_VkR9JeQgvYq-vnGNo0bns8xi38cln-Umfv0qUgxm1R-rp9fpOvucRg2rz0-2W_Zs_CH7ZZ5BKpPrnLuS5FzzL4CH7UOKwXXXE_4S3a2e5MFftkhmVT-tNbWWrHl7Zt9FqglQjkuqakaTfd6zsYtEclcrwiYwvXDuuwIqyG-WBVS5Rjntqfar7KU2TVjTTkgp54KRIz18MMcmzTBGCv303wM_w
    organization:
      name: organization
      in: header
      description: |-
        Identify the entity.
        It originates from the client that calls an API, either a presentation component or a microservice, it must be propagated in all communications.
      required: false
      schema:
        type: string
      example: '0049'
  securitySchemes:
    BearerAuth:
      type: http
      description: |-
        Token that contains the credentials of a user.
        It originates from the client that calls an API, either a presentation component or a microservice,it must be propagated through all communications.
      scheme: bearer
      bearerFormat: JWT
